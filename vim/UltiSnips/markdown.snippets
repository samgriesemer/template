priority -50

global !p
from datetime import datetime, timedelta
def fname_to_str(fname):
	return fname.replace('_', ' ')

def day(shift=0):
	return (datetime.now()+timedelta(shift)).strftime('%Y-%m-%d')

TODAY=day()
TOMOR=day(1)

endglobal

#############
# TEMPLATES #
#############
snippet wj "WikiJournal"
---
title: `!p snip.rv=TODAY`
created: `!p snip.rv=TODAY`
modified: `!p snip.rv=TODAY`
type: journal
---

# Todo | -event entry.before:`!p snip.rv=TOMOR` due.before:`!p snip.rv=TOMOR` (status:pending or end.after:`!p snip.rv=TODAY`) | due:`!p snip.rv=TODAY`T23:59:59

# Events | +event entry.before:`!p snip.rv=TOMOR` (status:pending or end.after:`!p snip.rv=TODAY`) | +event

# Log
$0

# Thoughts
endsnippet

snippet ww "WikiWiki"
---
title: `!p snip.rv=fname_to_str(snip.basename)`
created: `!p snip.rv=TODAY`
modified: `!p snip.rv=TODAY`
datelink: [[`!p snip.rv=TODAY`]]
type: wiki
summary: $1
---

$0
endsnippet

snippet wf "WikiFeed"
---
title: `!p snip.rv=fname_to_str(snip.basename)`
created: `!p snip.rv=TODAY`
modified: `!p snip.rv=TODAY`
datelink: [[`!p snip.rv=TODAY`]]
type: feed
media: $1
source: $2
volume: $3
files:
tags: $4
url: ${5:`!v getreg("*")`}
---

$0
endsnippet

snippet wz "WikiZettel"
---
title: `!p snip.rv=fname_to_str(snip.basename)`
created: `!p snip.rv=TODAY`
modified: `!p snip.rv=TODAY`
datelink: [[`!p snip.rv=TODAY`]]
type: zettel
summary: $1
---

$0
endsnippet

snippet wn "WikiTaskNote"
---
title: `!p snip.rv=fname_to_str(snip.basename)`
created: `!p snip.rv=TODAY`
modified: `!p snip.rv=TODAY`
datelink: [[`!p snip.rv=TODAY`]]
type: tasknote
---

$0
endsnippet

snippet col "WikiColor"
<span style='color:$1'>${VISUAL}$2</span>$0
endsnippet

# vim:ft=snippets:
